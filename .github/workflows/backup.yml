name: Back up simplifier source code

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}
      - name: Download and commit simplifier source code
        run: wget https://simplifier.net/ukdigitalmedicine/download
          
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Commit report
        run: |
          export BRNAME=$(date | tr -d "[:space:]" | tr -d ":");
          git config --global user.name 'Declan Kieran'
          git config --global user.email 'declan.kieran1@nhs.net'
          git checkout -b $BRNAME
          git add -A
          git commit -m "$(date)"
          git push origin $BRNAME

      - name: Dump GitHub context 2
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Backup Run',
              owner,
              repo,
              head: 'MonJun5011303UTC2023',
              base: 'main',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['feature', 'automated pr']
            });

      - name: "Merge pull request"
        uses: "actions/github-script@v6"
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const head = "MonJun5011303UTC2023";
            await new Promise(r => setTimeout(r, 2000));
            const { data } = await github.rest.pulls.list({ owner, repo, head, per_page: 1 });
            if (data.length) {
              const pull_number = data[0].number;
              await github.rest.pulls.merge({ owner, repo, pull_number, merge_method: "squash"});
            }
