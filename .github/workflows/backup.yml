name: Back up simplifier source code

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download simplifier source code
        run: wget https://simplifier.net/ukdigitalmedicine/download

      - name: Unpack simplifier source code
        run: unzip -B download
  
      - name: Update repo
        run: |
          git config --global user.email 'ci@render.diagrams'; \
          git config --global user.name 'Diagram Pipeline'; \
          export BRNAME=$(date | tr -d "[:space:]") | tr -d ":" \
          git checkout -b $BRNAME
          git add .; \
          if [[ `git status --porcelain` ]]; then           # Check if anything to commit
            git commit -m 'Auto render'; \
            git push origin $(sed -e 's#.*remotes/origin/\(\)#\1#' <<< $GITHUB_REF);
          fi
          
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            export TODAY=$(date)
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: $TODAY,
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: 'main',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['feature', 'automated pr']
            });

      - name: "Merge pull request"
        uses: "actions/github-script@v6"
        with:
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0]
            const repository = context.repo

            await github.rest.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })